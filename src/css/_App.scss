@use "./destyle.css";

@use "./Var" as *;

@font-face {
  font-family: "HarmonyOS Sans";
  font-style: normal;
  font-weight: 400;
  src: local("HarmonyOS Sans"),
    url("../../src/fonts/HarmonyOS_Sans/HarmonyOS_Sans_Regular.woff2")
      format("woff2");
  font-display: swap;
}

@font-face {
  font-family: "Noto Sans JP";
  font-style: normal;
  font-weight: 400;
  src: local("Noto Sans JP"),
    url("../../src/fonts/NotoSans/NotoSansJP-Regular.woff2") format("woff2");
  font-display: swap;
}

@font-face {
  font-family: "Material Icons";
  font-style: normal;
  font-weight: 400;
  src: local("Material Icons"),
    url("../../src/fonts/MaterialIcons/MaterialIconsOutlined-Regular.woff2")
      format("woff2");
  font-display: block;
}

::-webkit-scrollbar {
  width: $base-radius;
}

::-webkit-scrollbar-track {
  background: transparent;
}

::-webkit-scrollbar-thumb {
  background: $color-separate;
}

* {
  scrollbar-width: thin;
  scrollbar-color: $color-separate transparent;
  outline-color: $color-accent;
}
:where(html, body, #root, #root > div) {
  width: 100%;
  height: 100%;
  overflow: hidden;
}

body {
  color: $color-text;
  font-size: 16px;
  font-family: "HarmonyOS Sans", "Noto Sans JP", sans-serif;
  background-color: $color-back;
  accent-color: $color-accent;
  // max-width: 900px;
  // margin: 0 auto;
}

i {
  font-family: "Material Icons";
  font-weight: normal;
  font-style: normal;
  display: block;
  width: calc($base-size / 2);
  font-size: calc($base-size / 2);
  height: calc($base-size / 2);
  user-select: none;
  text-transform: none;
  letter-spacing: normal;
  word-wrap: normal;
  white-space: nowrap;
  direction: ltr;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  -moz-osx-font-smoothing: grayscale;
  font-feature-settings: "liga";
}

#root {
  position: relative;
  > div {
    position: absolute;
    top: 0;
    left: 0;
    display: grid;
    grid-template:
      "h" auto
      "m" 1fr
      "f" auto;
    > header {
      grid-area: h;
      height: 50px;
      padding: 0 calc($base-size / 2);
      display: grid;
      grid-template: "l c r" / auto 1fr auto;
      align-items: center;

      > button:first-child {
        grid-area: l;
      }
      > h1 {
        grid-area: c;
        font-size: 1.1em;
        margin-bottom: 3px;
      }
      > :is(a, button) {
        grid-area: r;
      }

      > a,
      > button {
        width: $base-size;
        height: $base-size;
        border-radius: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
      }
    }

    > main {
      grid-area: m;
    }

    > footer {
      grid-area: f;
    }
  }
}

.btn {
  width: 100%;
  height: $base-size;
  border-radius: $base-radius;
  background-color: $color-fore;
  display: grid;
  place-content: center;
  transition: filter $transition-time ease-in-out;
  user-select: none;

  &.pri {
    color: #ffffff;
    background-color: $color-accent;
  }

  &.disabled {
    filter: grayscale(100%);
    pointer-events: none;
  }

  &:is(:focus, :active) {
    outline: 0;
    filter: brightness(0.8);
  }
}

.switch {
  appearance: none;
  -moz-appearance: none;
  -webkit-appearance: none;
  width: 40px;
  height: 20px;
  border-radius: 10px;
  position: relative;
  display: block;
  cursor: pointer;
  background-color: $color-back-mute;
  transition: background-color $transition-time ease-in-out;
  &:is(:checked, .checked) {
    background-color: $color-accent-mute;

    &::after {
      background-color: $color-accent;
      left: 20px;
    }
  }

  &::after {
    content: "";
    display: block;
    width: 20px;
    height: 20px;
    border-radius: 10px;
    background-color: $color-text-mute;
    position: absolute;
    top: 0;
    left: 0;
    transition: background-color $transition-time ease-in-out,
      left $transition-time ease-in-out;
  }
}
